name: Build and Publish Docker Image

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build ${{ matrix.platform }} ${{ matrix.build_type }}
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-24.04
            build_type: Release
            tag: latest-amd64
          - platform: linux/amd64
            runner: ubuntu-24.04
            build_type: Debug
            tag: latest-debug-amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            build_type: Release
            tag: latest-arm64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            build_type: Debug
            tag: latest-debug-arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.tag }}

      - name: Build and push per architecture
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_TYPE=${{ matrix.build_type }}

  merge-manifests:
    needs: build-and-push
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=latest-debug

      - name: Create and push manifest
        run: |
          for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' '); do
            docker buildx imagetools create -t $tag \
                ${tag}-amd64 \
                ${tag}-arm64
          done
